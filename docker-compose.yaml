services:
  php-fpm:
    build:
      context: .
      dockerfile: ./docker/dockerfile
      target: fpm
    container_name: php-fpm
    volumes:
      - ./:/var/www/html
      - vendor-volume:/var/www/html/vendor
    networks:
      - app-network

  php-cli:
    build:
      context: .
      dockerfile: ./docker/dockerfile
      target: cli
    container_name: php-cli
    volumes:
      - ./:/app
    command: /bin/sh -c "php artisan config:clear && php artisan cache:clear"
    networks:
      - app-network

  nginx:
    build:
      context: .
      dockerfile: ./docker/dockerfile
      target: nginx
    container_name: nginx
    ports:
      - ${APP_WEB_PORT}:80
      - "6001:6001"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - nodejs
    environment:
      - NGINX_CACHE_CONTROL="no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0"
    networks:
      - app-network

  nodejs:
    build:
      context: .
      dockerfile: ./docker/dockerfile
      target: nodejs
    container_name: nodejs
    ports:
      - "5173:5173"
    volumes:
      - ./:/app
    command: /bin/sh -c "npm install && npm run dev"
    networks:
      - app-network

  mysql_db:
    image: mariadb:10.6.14
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - ${DB_PORT}:3306
    command: [ 'mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_general_ci','--innodb-read-only-compressed=OFF' ]
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:8.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

volumes:
  mysql:
  vendor-volume:
  redis-data:

networks:
  app-network:
    driver: bridge
